DATA:
  dataset: refcoco+
  train_lmdb: /kaggle/input/refcoco-plus/lmdb/refcoco+/train.lmdb
  train_split: train
  val_lmdb: /kaggle/input/refcoco-plus/lmdb/refcoco+/testB.lmdb
  val_split: testB
  mask_root: /kaggle/input/refcoco-plus/masks/refcoco+
TRAIN:
  # Add id to continue training (to continue training => continue_training = 'must')
  run_id: 
  continue_training: 
  loss_type: bce_dice
  # Base Arch
  clip_pretrain: /kaggle/input/pretrain/ViT-B-16.pt
  input_size: 384
  word_len: 22
  word_dim: 512
  vis_dim: 512
  fpn_in: [768, 768, 512]
  fpn_out: [256, 512, 1024]
  sync_bn: True
  # Decoder
  num_layers: 3
  num_head: 8
  dim_ffn: 2048
  dropout: 0.1
  intermediate: False
  # Training Setting
  workers: 32  # data loader workers
  workers_val: 16
  epochs: 100
  start_epoch: 0
  batch_size: 32  # batch size for training
  batch_size_val: 32  # batch size for validation during training, memory and speed tradeoff
  base_lr: 0.0001
  lr_decay: 0.1
  lr_multi: 0.1
  weight_decay: 0.
  max_norm: 0.
  manual_seed: 0
  print_freq: 100
  # Resume & Save
  exp_name: CRIS_VIT16
  output_folder: exp/refcoco+
  save_freq: 1
  resume:  # path to latest checkpoint (default: none)
  evaluate: True  # evaluate on validation set, extra gpu memory needed and small batch_size_val is recommend
Distributed:
  dist_url: tcp://localhost:3681
  dist_backend: 'nccl'
  multiprocessing_distributed: True
  world_size: 1
  rank: 0
TEST:
  test_split: val-test
  test_lmdb: /kaggle/input/refcoco-plus/lmdb/refcoco+/val.lmdb
  visualize: True